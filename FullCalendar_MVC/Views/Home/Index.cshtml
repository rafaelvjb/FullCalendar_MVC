@model FullCalendar_MVC.Models.Eventos
@using FullCalendar_MVC.Models
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script>
        var CalLoading = true;

        $(document).ready(function () {
            var month = {url:'/Home/Eventos'}
            var day = { url: '/Home/Eventos' }

            $('#calendar').fullCalendar({
                minTime: "07:00:00",
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
               defaultView: 'agendaWeek',
                editable: true,
                allDaySlot: false,
                selectable: true,
                slotMinutes: 15,
                height: 472,
                events: {
                    url: 'Eventos',
                    data: function () {
                        return {
                            usuarioId: $('#profissionalM').val()
                        };
                    }
                },
                eventClick: function (calEvent, jsEvent, view) {
                    $('#ID').val(calEvent.ID);
                    $('#editEventTitle').val(calEvent.title);
                    $('#editEventDate').val($.fullCalendar.formatDate(calEvent.start, 'DD/MM/YYYY'));
                    $('#editEventTime').val($.fullCalendar.formatDate(calEvent.start, 'HH:mm'));
                    $('#editEventDuration').val($.fullCalendar.formatDate(calEvent.end, 'HH:mm'));
                    $('#profissional').val(calEvent.ProfissionalId);
                    $('#Observacoes').val(calEvent.Observacoes);
                    if (confirm("Deseja Editar esta Evento?")) {
                        ModalEditar(calEvent);
                    } else {
                        revertFunc();
                    }
                },

                eventDrop: function (event, dayDelta, minuteDelta, allDay, revertFunc) {
                    if (confirm("Confirm move?")) {
                        UpdateEvent(event.ID, event.start, event.end);

                    } else {
                        revertFunc();
                    }
                },

                eventResize: function (event, dayDelta, minuteDelta, revertFunc) {

                    if (confirm("Confirm change appointment length?")) {
                        UpdateEvent(event.ID, event.start, event.end);
                    } else {
                        revertFunc();
                    }
                },

                dayClick: function (date, allDay, jsEvent, view) {
                    $('#eventTitle').val("");
                    $('#eventDate').val($.fullCalendar.formatDate(date, 'DD/MM/YYYY'));
                    $('#eventTime').val($.fullCalendar.formatDate(date, 'HH:mm'));
                    ModalAdicionar(date);
                },

                //viewRender: function (view, element) {
                //    if (!CalLoading) {
                //        if (view.name === 'month') {
                //            $('#calendar').fullCalendar('removeEventSource', sourceFullView);
                //            $('#calendar').fullCalendar('removeEvents');
                //            $('#calendar').fullCalendar('addEventSource', sourceSummaryView);
                //        } else {
                //            $('#calendar').fullCalendar('removeEventSource', sourceSummaryView);
                //            $('#calendar').fullCalendar('removeEvents');
                //            $('#calendar').fullCalendar('addEventSource', sourceFullView);
                //        }
                //    }
                //},

                viewDisplay: function (view) {
                    if (lastView == 'undefined') {
                        lastView = 'firstRun';
                    }
                    if (view.name !== lastView) {
                        if (view.name == 'agendaWeek') {
                            $('#calendar').fullCalendar('addEventSource', month);
                            $('#calendar').fullCalendar('removeEventSource', day);
                            $('#calendar').fullCalendar('removeEventSource', day);
                            $('#calendar').fullCalendar('renderEvents');
                        }
                        if (view.name == 'agendaDay') {
                            $('#calendar').fullCalendar('addEventSource', day);
                            $('#calendar').fullCalendar('removeEventSource', month);
                            $('#calendar').fullCalendar('removeEventSource', month);
                            $('#calendar').fullCalendar('renderEvents');
                        }
                        if (view.name == 'month') {
                            $('#calendar').fullCalendar('addEventSource', month);
                            $('#calendar').fullCalendar('removeEventSource', day);
                            $('#calendar').fullCalendar('removeEventSource', day);
                            $('#calendar').fullCalendar('renderEvents');
                        }
                        lastView = view.name;
                    }
                }
            });

            //$('#calendar').fullCalendar('addEventSource', month);
            $('#calendar').fullCalendar('rerenderEvents');
            CalLoading = false;
        });

        $('#btnPopupCancel').click(function () {
            ClearPopupFormValues();
            $('#popupEventForm').hide();
        });

        $('#BtnDeletaEvento').click(function () {
            $('#ModalEditar').hide();
            var idd = parseInt($('#ID').val());
            ClearPopupFormValues();
            $.ajax({
                url: "/Home/DeletaEvento",
                data: { id: JSON.stringify(idd) },
                success: function (response) {
                    if (response.message == 'sucesso') {
                        alert('Evento Excluido com sucesso!!!');
                        location.reload();
                        $('#ModalEditar').hide();
                    } else {
                        alert('Erro, algo');
                    }
                }
            });
        });

        function ModalAdicionar(date) {
            ClearPopupFormValues();
            $('#ModalAdicionar').modal('show');
            $('#eventTitle').focus();
        }

        function ModalEditar(date) {
            ClearPopupFormValues();
            $('#ModalEditar').modal('show');

        }

        function ClearPopupFormValues() {
            $('#eventID').val("");
            $('#eventTitle').val("");
            $('#eventDateTime').val("");
            $('#eventDuration').val("");
        }

        function UpdateEvent(EventID, EventStart, EventEnd) {
            var dataRow = {
                'ID': EventID,
                'NewEventStart': EventStart,
                'NewEventEnd': EventEnd
            }

            $.ajax({
                type: 'POST',
                url: "/Home/AtualizaDuracao",
                dataType: "json",
                contentType: "application/json",
                data: JSON.stringify(dataRow),
                success: function (response) {
                    if (response.message == 'Sucesso') {
                        alert('Modificado com sucesso!!!');
                        location.reload();
                    } else {
                        alert('Já existe um outro evento no horario escolhido!');
                        location.reload();
                    }
                }
            });
        }

        function DeleteEvent(EventID, EventStart, EventEnd) {

            var dataRow = {
                'ID': EventID,
                'NewEventStart': EventStart,
                'NewEventEnd': EventEnd
            }

            $.ajax({
                type: 'POST',
                url: "/Home/DeletaEvento",
                dataType: "json",
                contentType: "application/json",
                data: JSON.stringify(dataRow)
            });
        }

        function ObterValorProfissional() {
            var nome = $('#profissional').val();
        }

        $('#profissionalM').change(function () {
            $('#calendar').fullCalendar('refetchEvents');
        });
    </script>
}
<!--Filtro por Profissional-->
<div class="row" style="padding-top:15px;">
    <div class="col-md-3">
        @using (Html.BeginForm("Index", "Home"))
        {
        <div class="row" style="padding-top:20px">
            <h4 style="text-align:center;padding-left:30px">Filtro por Profissional</h4>

            <div class="form-group">
                <div class="col-md-12 col-md-offset-1">
                    @Html.DropDownListFor(model => model.ProfissionalId, ((IEnumerable<Profissional>)ViewBag.Profissionais).Select(option => new SelectListItem
                   {
                       Text = option.Nome,
                       Value = option.ProfissionalId.ToString(),
                       Selected = (Model != null) && (option.ProfissionalId == Model.ProfissionalId)
                   }), "Selecione", new { id = "profissionalM", @class = "form-control" })
                </div>
            </div>
        </div>
        }
    </div>

    <div class="col-md-9">
        <div id="calendar"></div>
    </div>
</div>

<!--Modal Adicionar-->
<div class="modal fade" id="ModalAdicionar" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Adicionar Evento</h4>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm("SalvaEvento", "Home", FormMethod.Get))
                {
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            <label class="control-label">Nome Completo</label>
                            <input id="eventTitle" type="text" name="Titulo" class="form-control" />
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Profissional</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.ProfissionalId, ((IEnumerable<Profissional>)ViewBag.Profissionais).Select(option => new SelectListItem
                               {
                                   Text = option.Nome,
                                   Value = option.ProfissionalId.ToString(),
                                   Selected = (Model != null) && (option.ProfissionalId == Model.ProfissionalId)
                               }), "Selecione", new { id = "profissional", @class = "form-control" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <label for="comment">Observações:</label>
                    <textarea class="form-control" name="Observacoes" rows="5" id="comment"></textarea>


                    <div class="col-md-offset-5 col-md-8" style="padding-top: 30px;">
                        <input type="submit" value="Salvar" class="btn btn-default" style="text-align:center" />
                    </div>

                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        <input id="eventTime" type="text" name="HoraEvento" class="form-control" style="display:none" />
                    </div>

                    <div class="col-md-6">
                        <input type="text" name="DuracaoEvento" class="form-control" style="display:none" />
                    </div>
                </div>
                <div class="col-md-6">
                    <input id="eventDate" type="text" name="DataEvento" class="form-control" style="display: none" />
                </div>
                }
            </div>
        </div>
    </div>
</div>

<!--Modal para Editar evento-->
<div class="modal fade" id="ModalEditar" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="editModalLabel">Adicionar Evento</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AtualizaEvento", "Home", FormMethod.Get))
            {
                    @Html.Hidden("ID")
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-6">
                                <label class="control-label col-md-2">Nome</label>
                                <input type="text" name="Titulo" id="editEventTitle" class="form-control" placeholder="Nome" />
                            </div>
                            <div class="col-md-6">
                                <label class="control-label col-md-2">Data</label>
                                <input type="text" name="DataEvento" id="editEventDate" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-6" style="padding-top: 10px;">
                                <label class="control-label">Horario de inicio</label>
                                <input type="text" name="HoraEvento" id="editEventTime" class="form-control" />
                            </div>
                            <div class="col-md-6" style="padding-top: 10px;">
                                <label class="control-label">Horario de término</label>
                                <input type="text" name="duracaoEvento" id="editEventDuration" class="form-control" placeholder="30" />
                            </div>
                        </div>
                    </div>
                    <div class="row" style="padding-top: 20px;">
                        <div class="form-group col-md-offset-2">
                            <label class="control-label col-md-8" style="text-align:center;">Profissional</label>
                            <div class="col-md-8">

                                @Html.DropDownListFor(model => model.ProfissionalId, ((IEnumerable<Profissional>)ViewBag.Profissionais).Select(option => new SelectListItem
                           {
                               Text = option.Nome,
                               Value = option.ProfissionalId.ToString(),
                               Selected = (Model != null) && (option.ProfissionalId == Model.ProfissionalId)
                           }), "Selecione", new { id = "profissional", @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Observações:</label>
                        <textarea class="form-control" name="Observacoes" rows="5" id="Observacoes"></textarea>
                    </div>

                        <div class="row">
                            <div>
                                <div class="modal-footer col-md-8 col-md-offset-2" style="text-align: center;padding-top:10px;">
                                    <input type="submit" id="btnPopupCancel" class="btn btn-primary" data-dismiss="modal" value="Cancelar" />
                                    <button type="button" id="BtnDeletaEvento" class="btn btn-danger" value="Deletar">Deletar</button>
                                    <input type="submit" value="Salvar" class="btn btn-success" style="text-align:center" />
                                </div>
                            </div>
                        </div>
                }
            </div>
        </div>
    </div>
</div>
